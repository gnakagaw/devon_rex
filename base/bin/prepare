#!/bin/bash
set -euo pipefail

# Determine the target platform
platform_name=$(sh -c '. /etc/os-release ; echo $NAME')
case $platform_name in
  'Debian GNU/Linux') is_debian=true  is_ubuntu=false ;;
  'Ubuntu')           is_debian=false is_ubuntu=true  ;;
  *) echo "Unknown platform! '${platform_name}'"; exit 1 ;;
esac

# Install required packages
required_packages=(
  autoconf
  build-essential
  curl
  git
  gnupg
  libbz2-dev
  libcurl4-openssl-dev
  libevent-dev
  libffi-dev
  libglib2.0-dev
  libncurses-dev
  libreadline-dev
  libssl-dev
  libxml2-dev
  libxslt-dev
  libyaml-dev
  openssh-client
  patchutils
  procps
  software-properties-common
  sudo
  tzdata
  unzip
  wget
  zlib1g-dev
)

if [[ $is_debian = true ]]; then
  required_packages+=(
    locales
  )
elif [[ $is_ubuntu = true ]]; then
  required_packages+=(
    language-pack-en
    python-software-properties
  )
fi

apt-get update -y
apt-get install -qq -y --no-install-recommends ${required_packages[*]}

# Configure locale
if [[ $is_debian = true ]]; then
  sed -i -e "s/# ${LANGUAGE}/${LANGUAGE}/" /etc/locale.gen
  locale-gen "$LANGUAGE"
  dpkg-reconfigure --frontend noninteractive locales
elif [[ $is_ubuntu = true ]]; then
  locale-gen "$LANGUAGE"
  update-locale "$LANGUAGE"
fi

# Clean up
apt-get -qyy autoremove
rm -rf /var/lib/apt/lists/*
apt-get -qyy clean

# Create a user
adduser --system --shell /bin/bash --home "$RUNNER_USER_HOME" "$RUNNER_USER"
