name: Build

on:
  push:
    branches: ["master"]
    tags: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  # https://gist.github.com/ybiquitous/c80f15c18319c63cae8447a3be341267
  check_skip:
    runs-on: ubuntu-latest
    if: |
      !contains(format('{0} {1} {2}', github.event.head_commit.message, github.event.pull_request.title, github.event.pull_request.body), '[skip ci]')
    steps:
      - run: |
          cat <<'MESSAGE'
          github.event_name: ${{ toJson(github.event_name) }}
          github.event:
          ${{ toJson(github.event) }}
          MESSAGE

  build:
    needs: check_skip
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build-context:
          - base
          - dotnet
          - go
          - haskell
          - java
          - npm
          - php
          - python
          - ruby
          - swift
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
      - name: Setup gems
        run: |
          gem install bundler --no-document
          bundle config set --local path vendor/bundle
          bundle install --jobs=4 --retry=3
      - name: Show Docker information
        run: docker info
      - name: Define variables
        id: define_vars
        # See https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html
        run: |
          echo "GITHUB_REF: ${GITHUB_REF}"
          tag="${GITHUB_REF#refs/*/}"
          tag="${tag///}"
          echo "::set-output name=tag::${tag}"
      - name: Print variables
        run: |
          echo "tag: ${{ steps.define_vars.outputs.tag }}"
      - name: Build and test the Docker image
        run: |
          bundle exec rake dockerfile:generate dockerfile:verify
          bundle exec rake docker:build docker:run
          bundle exec rake docker:run'[sudo update-ca-certificates]'
          bundle exec rake docker:run'[sudo apt-get clean]'
        env:
          BUILD_CONTEXT: ${{ matrix.build-context }}
          TAG: ${{ steps.define_vars.outputs.tag }}
      - name: Publish the Docker image
        if: |
          steps.define_vars.outputs.tag == 'master' || startsWith(github.ref, 'refs/tags/')
        run: |
          bundle exec rake docker:push
        env:
          BUILD_CONTEXT: ${{ matrix.build-context }}
          TAG: ${{ steps.define_vars.outputs.tag }}
          TAG_LATEST: ${{ startsWith(github.ref, 'refs/tags/') }}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
