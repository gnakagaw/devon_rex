#!/bin/bash
set -euo pipefail

# Install required packages
required_packages=(
  autoconf
  build-essential
  curl
  gnupg
  libbz2-dev
  libcurl4-openssl-dev
  libevent-dev
  libffi-dev
  libglib2.0-dev
  libncurses-dev
  libreadline-dev
  libssl-dev
  libxml2-dev
  libxslt-dev
  libyaml-dev
  openssh-client
  patchutils
  procps
  software-properties-common
  sudo
  tzdata
  unzip
  wget
  zlib1g-dev
  locales
)
apt-get update -y
apt-get install -qq -y --no-install-recommends ${required_packages[*]}
apt-get -qyy autoremove
apt-get -qyy clean

# Configure locale
sed -i -e "s/# ${LANGUAGE}/${LANGUAGE}/" /etc/locale.gen
locale-gen "$LANGUAGE"
dpkg-reconfigure --frontend noninteractive locales

# Create a user
adduser --system --shell /bin/bash --home "$RUNNER_USER_HOME" "$RUNNER_USER"

# Verify the user and group
id --user "$RUNNER_USER"
groups=$(id --groups --name "$RUNNER_USER")
[[ "$groups" == "$RUNNER_GROUP" ]] || (echo "Unexpected groups: '${groups}'" ; exit 1)

# Add sudoers(5) configurations for specific commands
echo "$RUNNER_USER ALL=NOPASSWD: /usr/sbin/update-ca-certificates" > /etc/sudoers.d/update-ca-certificates
echo "$RUNNER_USER ALL=NOPASSWD: /usr/bin/apt-get" > /etc/sudoers.d/apt-get

# Configure Bash on shell
cat << 'EOF' >> "${RUNNER_USER_HOME}/.bashrc"
alias ls='ls --color=auto'
alias ll='ls -lF'
alias l='ls -lAF'
alias grep='grep --color=auto'
alias less='less -ciRM'
EOF
chown "${RUNNER_USER}:${RUNNER_GROUP}" "${RUNNER_USER_HOME}/.bashrc"

# Create extra directories
install --directory --owner="${RUNNER_USER}" --group="${RUNNER_GROUP}" "${RUNNER_USER_HOME}/bin"
